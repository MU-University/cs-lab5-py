name: Build and Test Python Project

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout Code

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Clone tests repository
        env:
          REPO_URL: https://github.com/MU-University/cs-lab1-py-test.git
        run: |
          git clone --depth 1 $REPO_URL temp-repo
          mkdir -p tests
          cp -r temp-repo/test/* test/
          rm -rf temp-repo

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Create directory for test results
        run: mkdir -p junit

      - name: Run main Python script
        id: run_script
        run: |
          set -o pipefail
          python main/main.py 2>&1 | tee main_script.log
        continue-on-error: false  # Ensure the step is marked as failed if there is an error

      - name: Generate build error report
        if: failure()  # Only run if the previous steps failed
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > junit/test-results.xml
          echo '<testsuites>' >> junit/test-results.xml
          echo '  <testsuite name="Build Errors" tests="1" failures="1">' >> junit/test-results.xml
          echo '    <testcase classname="Build" name="Build Script">' >> junit/test-results.xml
          echo '      <failure type="error" message="Build failed. See log for details."><![CDATA[' >> junit/test-results.xml
          cat main_script.log >> junit/test-results.xml
          echo '      ]]></failure>' >> junit/test-results.xml
          echo '    </testcase>' >> junit/test-results.xml
          echo '  </testsuite>' >> junit/test-results.xml
          echo '</testsuites>' >> junit/test-results.xml

      - name: Test with pytest
        id: pytest
        run: |
          set -o pipefail
          pytest test/test.py --doctest-modules --tb=short --junitxml=junit/test-results.xml
        continue-on-error: false  # Continue even if tests fail

      - name: Upload pytest test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: junit/test-results.xml

      - name: Upload build error report
        if: failure()  # Only upload if the build failed
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: junit/test-results.xml

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: junit/test-results.xml
          summary: true
          display-options: fEX
          fail-on-empty: false
          title: Test results
